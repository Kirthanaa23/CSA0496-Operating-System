#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#define MAX_FRAMES 3
void printFrames(int frames[], int n) {
for (int i = 0; i &lt; n; i++) {
if (frames[i] == -1) {

printf(&quot; - &quot;);
}
else {
printf(&quot; %d &quot;, frames[i]);
}
}
printf(&quot;\n&quot;);
}
int main() {
int frames[MAX_FRAMES];
int usageHistory[MAX_FRAMES];
for (int i = 0; i &lt; MAX_FRAMES; i++) {
frames[i] = -1;
usageHistory[i] = 0;
}
int pageFaults = 0;
int referenceString[] = {7, 0, 1, 2, 0, 3, 0, 4, 2, 3, 0, 3, 2};
int n = sizeof(referenceString) / sizeof(referenceString[0]);
printf(&quot;Reference String: &quot;);
for (int i = 0; i &lt; n; i++) {
printf(&quot;%d &quot;, referenceString[i]);
}
printf(&quot;\n\n&quot;);
printf(&quot;Page Replacement Order:\n&quot;);
for (int i = 0; i &lt; n; i++) {
int page = referenceString[i];
int pageFound = 0;
for (int j = 0; j &lt; MAX_FRAMES; j++) {
if (frames[j] == page) {
pageFound = 1;
for (int k = 0; k &lt; MAX_FRAMES; k++) {
if (k != j) {
usageHistory[k]++;
}
}
usageHistory[j] = 0;
break;

}
}
if (!pageFound) {
printf(&quot;Page %d -&gt; &quot;, page);
int lruPage = 0;
for (int j = 1; j &lt; MAX_FRAMES; j++) {
if (usageHistory[j] &gt; usageHistory[lruPage]) {lruPage = j;
}
}
int replacedPage = frames[lruPage];
frames[lruPage] = page;
usageHistory[lruPage] = 0;
if (replacedPage != -1) {
printf(&quot;Replace %d with %d: &quot;, replacedPage, page);
} else {
printf(&quot;Load into an empty frame: &quot;);
}
printFrames(frames, MAX_FRAMES);
pageFaults++;
}
}
printf(&quot;\nTotal Page Faults: %d\n&quot;, pageFaults);
return 0;
}
