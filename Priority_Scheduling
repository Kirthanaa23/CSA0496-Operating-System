#include &lt;stdio.h&gt;
struct Process {
int id; // Process ID
int burst; // Burst time
int priority; // Priority
int waiting; // Waiting time
int turnaround; // Turnaround time
};
// Function to sort processes based on priority (ascending order)
void sortByPriority(struct Process proc[], int n) {
for (int i = 0; i &lt; n - 1; i++) {
for (int j = i + 1; j &lt; n; j++) {
if (proc[i].priority &gt; proc[j].priority) {
struct Process temp = proc[i];
proc[i] = proc[j];
proc[j] = temp;
}

}
}
}

// Function to calculate waiting time for each process
void findWaitingTime(struct Process proc[], int n) {
proc[0].waiting = 0; // The first process has no waiting time
// Calculate waiting time for all processes
for (int i = 1; i &lt; n; i++) {
proc[i].waiting = proc[i - 1].waiting + proc[i - 1].burst;
}
}
// Function to calculate turnaround time for each process
void findTurnaroundTime(struct Process proc[], int n) {
// Calculate turnaround time for all processes
for (int i = 0; i &lt; n; i++) {
proc[i].turnaround = proc[i].burst + proc[i].waiting;
}
}
// Function to calculate average waiting time and turnaround time
void findAvgTime(struct Process proc[], int n) {
float totalWaiting = 0, totalTurnaround = 0;
for (int i = 0; i &lt; n; i++) {
totalWaiting += proc[i].waiting;
totalTurnaround += proc[i].turnaround;
}
printf(&quot;Average Waiting Time = %.2f\n&quot;, totalWaiting / n);
printf(&quot;Average Turnaround Time = %.2f\n&quot;, totalTurnaround / n);
}

int main() {
int n;
printf(&quot;Enter number of processes: &quot;);
scanf(&quot;%d&quot;, &amp;n);
struct Process proc[n];
// Get burst time and priority for each process
for (int i = 0; i &lt; n; i++) {
proc[i].id = i + 1;
printf(&quot;Enter burst time for Process %d: &quot;, i + 1);
scanf(&quot;%d&quot;, &amp;proc[i].burst);
printf(&quot;Enter priority for Process %d: &quot;, i + 1);
scanf(&quot;%d&quot;, &amp;proc[i].priority);
}
// Sort processes based on priority (ascending order)
sortByPriority(proc, n);
// Calculate waiting time and turnaround time
findWaitingTime(proc, n);
findTurnaroundTime(proc, n);
// Calculate average waiting and turnaround time
findAvgTime(proc, n);
// Output process information
printf(&quot;\nProcess\tBurst\tPriority\tWaiting\tTurnaround\n&quot;);
for (int i = 0; i &lt; n; i++) {
printf(&quot;%d\t%d\t%d\t\t%d\t%d\n&quot;, proc[i].id, proc[i].burst, proc[i].priority,
proc[i].waiting, proc[i].turnaround);
}
return 0;
}

INPUT:

Enter number of processes: 3
Enter burst time for Process 1: 6
Enter priority for Process 1: 2
Enter burst time for Process 2: 8
Enter priority for Process 2: 1
Enter burst time for Process 3: 7
Enter priority for Process 3: 3

OUTPUT:
Average Waiting Time = 6.00
Average Turnaround Time = 14.00

Process Burst Priority Waiting Turnaround
2 8 1 0 8
1 6 2 8 14
3 7 3 14 21
